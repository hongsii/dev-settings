[alias]
    alias = "!git config --list | egrep '^alias.+' | sed -e 's/^alias\\.//' | sed -e 's/^[^=]*=/\\'$'\\033[31m&\\033[(B\\033[m/'"
    s = status -s
    co = "!f() { \
        readonly INCLUDE_REMOTE_OPTION='all'; \
        args=( \"$@\" ); \
        if [ \"${#args[@]}\" == 1 ] && [[ \"${args[*]}\" =~ ^\"$INCLUDE_REMOTE_OPTION\"$ ]]; then \
            include_remote='--all'; \
        fi; \
        if [ -z $args ] || [ $include_remote ]; then \
            branch=$(git branch $include_remote | grep -v HEAD | awk '{print $2}' | fzf --preview 'echo {} | xargs git log --color --graph'); \
            git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); \
        else \
            git checkout $args; \
        fi \
    }; f"
    aa = "!git reset && git add $(git status -s | fzf -m | awk '{print $2}')"
    b = "!f() { \
        if [ $1 = 'd' -o $1 = 'D' ]; then \
            git branch -$1; \
        elif [ $1 = 'l' -o $1 = 'list' ]; then \
            if [ $2 = '--all' ]; then \
                include_remote=$2; \
            fi; \
            git branch | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color --graph'; \
        elif [ $1 = 'll' ]; then \
            git branch | grep -v '^\\*'; \
        fi; \
        }; f"
