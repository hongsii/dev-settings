[alias]
    alias = "!git config --list | egrep '^alias.+' | sed -e 's/^alias\\.//' | sed -e 's/^[^=]*=/\\'$'\\033[31m&\\033[(B\\033[m/'"
    s = status
    ss = status -s
    co = "!f() { \
        readonly INCLUDE_REMOTE_OPTION='all'; \
        args=( \"$@\" ); \
        if [ \"${#args[@]}\" == 1 ] && [[ \"${args[*]}\" =~ ^\"$INCLUDE_REMOTE_OPTION\"$ ]]; then \
            include_remote='--all'; \
        fi; \
        if [ -z $args ] || [ $include_remote ]; then \
            branch=$(git b list $include_remote); \
            if [ $branch ]; then git checkout $branch; fi; \
        else \
            git checkout $@; \
        fi \
    }; f"
    aa = "!git add $(git status -s | fzf -m | awk '{print $2}')"
    raa = "!git reset && git add $(git status -s | fzf -m | awk '{print $2}')"
    r = "!git reset $@"
    b = "!f() { \
        if [ $1 = 'd' ] || [ $1 = 'D' ]; then \
            branch=$(git b list); \
            if [ $branch ]; then git branch -$1 $branch; fi; \
        elif [ $1 = 'l' ] || [ $1 = 'list' ]; then \
            if [ $2 ] && [ $2 = '--all' ]; then include_remote=$2; fi; \
            git branch $include_remote | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color --graph' | cut -c 3-; \
        fi; \
    }; f"
    cm = "!git commit -m $1"
    c = "!git commit"
    rs = "!f() { \
        commit_hash=$(git log --oneline | fzf --preview \"echo {} | cut -c 1-7 | xargs git log -n 1 --pretty=format:%s%n%n%b\" | awk '{ print $1}'); \
        git reset $@ $commit_hash; \
    }; f"
    m = "!git merge $@ $(git b l)"
    lp = "!git log -p"
    p = "!git pull $@"
